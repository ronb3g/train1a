{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22 #ifndef DIJKSTRA_H\par
#define DIJKSTRA_H\par
#include <climits>\par
#include <QDebug>\par
//#include <dijkstraswitchcheck.h>\par
long dijcheckSwitches(long dcN, long dnN);\par
int forbiddenTurnU(int u, int v);\par
int forbiddenTurnV(int u, int v);\par
using namespace std;\par
typedef long vertex_t;\par
typedef long weight_t;\par
\par
const weight_t max_weight = LONG_MAX;\par
\par
struct neighbor\par
\{\par
    vertex_t target;\par
    weight_t weight;\par
    neighbor(vertex_t arg_target, weight_t arg_weight): target(arg_target), weight(arg_weight) \{ \}\par
\};\par
typedef std::vector<std::vector<neighbor> > adjacency_list_t;\par
\par
void DijkstraComputePaths(vertex_t source,const adjacency_list_t &adjacency_list, std::vector<weight_t> &min_distance, std::vector<vertex_t> &previous)\par
\{\par
    int forbidden1, forbidden2 = 0;\par
    int oldestU, oldU, recentU = -1;\par
    int oldererSw, oldestSw, oldSw, lastSw, currentSw = 0;\par
    int sw3, sw2, sw1 = -1;\par
    long switchNumber = -1;\par
    int u1, u2, u3, u4, u5, u6, u7, u8 = -1;\par
    int v1, v2, v3, v4, v5, v6, v7, v8 = -1;\par
    int U, V;\par
    int n = adjacency_list.size();\par
    min_distance.clear();\par
    min_distance.resize(n, max_weight);\par
    min_distance[source] = 0;\par
    previous.clear();\par
    previous.resize(n, -1);\par
    std::set<std::pair<weight_t, vertex_t> > vertex_queue;\par
        vertex_queue.insert(std::make_pair(min_distance[source], source));\par
\par
    while (!vertex_queue.empty())\par
    \{\par
        weight_t dist = vertex_queue.begin()->first;\par
        vertex_t u = vertex_queue.begin()->second;\par
        vertex_queue.erase(vertex_queue.begin());\par
\par
        // Visit each edge exiting u\par
        const std::vector<neighbor> &neighbors = adjacency_list[u];\par
        for (std::vector<neighbor>::const_iterator neighbor_iter = neighbors.begin();\par
        neighbor_iter != neighbors.end();\par
        neighbor_iter++)\par
        \{\par
            vertex_t v = neighbor_iter->target;\par
            weight_t weight = neighbor_iter->weight;\par
            weight_t distance_through_u = dist + weight;        \par
\par
             if (distance_through_u < min_distance[v])\par
            \{\par
                 qDebug() << "input " << u << v << endl;\par
\par
                 U = forbiddenTurnU(u, v);\par
                 V = forbiddenTurnV(u ,v);\par
                 qDebug() << "generated " << U << V << endl;\par
                //if (U != -1)\{\par
                     u8 = u7;\par
                     u7 = u6;\par
                     u6 = u5;\par
                     u5 = u4;\par
                     u4 = u3;\par
                     u3 = u2;\par
                     u2 = U;\par
                     u1 = U;\par
                 //\}\par
                // if (V != -1)\{\par
                     v8 = v7;\par
                     v7 = v6;\par
                     v6 = v5;\par
                     v5 = v4;\par
                     v4 = v3;\par
                     v3 = v2;\par
                     v2 = V;\par
                     v1 = V;\par
                 //\}\par
\par
                 qDebug() << u1 << v1 << "," << u2 << v2 << "," << u3 << v3 << "," << u4 << v4 << "," << u5 << v5 << endl;\par
                 if ((u == u1 && v == v1) ||(u == u2 && v == v2) || (u == u3 && v == v3) ||\par
                         (u == u4 && v == v4) || (u == u5 && v == v5) || (u == u6 && v == v6) || (u == u7 && v == v7))\{\par
                     qDebug() << "skipped" << endl;\par
                 \}\par
                 else\{\par
                //qDebug() << "s" << u << v << endl;\par
                vertex_queue.erase(std::make_pair(min_distance[v], v));\par
                min_distance[v] = distance_through_u;\par
                previous[v] = u;\par
                //qDebug() << "e" << u << v << endl;\par
                vertex_queue.insert(std::make_pair(min_distance[v], v));\par
\}\par
            \}\par
\par
        \}\par
    \}\par
\par
\}\par
\par
std::list<vertex_t> DijkstraGetShortestPathTo(vertex_t vertex, const std::vector<vertex_t> &previous)\par
\{\par
\par
    std::list<vertex_t> path;\par
    for (; vertex != -1; vertex = previous[vertex])\par
        path.push_front(vertex);\par
    return path;\par
\}\par
\par
int forbiddenTurnU(int u, int v)\par
\{\par
    if ( u == 43 && v == 42)\par
        return 42;\par
    else if ( u == 44 && v == 42)\par
        return 42;\par
    else if ( u == 42 && v == 41)\par
        return 41;\par
    else if ( u == 46 && v == 41)\par
        return 41;\par
    else if ( u == 41 && v == 40)\par
        return 40;\par
    else if ( u == 45 && v == 40)\par
        return 40;\par
    else if ( u == 15 && v == 14)\par
        return 14;\par
    else if ( u == 16 && v == 14)\par
        return 14;\par
    else if ( u == 8 && v == 7)\par
        return 7;\par
    else if ( u == 9 && v == 7)\par
        return 7;\par
    else if ( u == 5 && v == 4)\par
        return 4;\par
    else if ( u == 6 && v == 4)\par
        return 4;\par
    else if ( u == 11 && v == 10)\par
        return 10;\par
    else if ( u == 12 && v == 10)\par
        return 10;\par
    else if ( u == 14 && v == 16)\par
        return 16;\par
    else if ( u == 12 && v == 16)\par
        return 16;\par
    else if ( u == 63 && v == 62)\par
        return 62;\par
    else if ( u == 64 && v == 62)\par
        return 62;\par
    else if ( u == 18 && v == 17)\par
        return 17;\par
    else if ( u == 19 && v == 17)\par
        return 17;\par
    else if ( u == 3 && v == 5)\par
        return 5;\par
    else if ( u == 4 && v == 5)\par
        return 5;\par
    else if ( u == 21 && v == 20)\par
        return 20;\par
    else if ( u == 22 && v == 20)\par
        return 20;\par
    else if ( u == 23 && v == 22)\par
        return 22;\par
    else if ( u == 24 && v == 22)\par
        return 22;\par
    else if ( u == 54 && v == 52)\par
        return 52;\par
    else if ( u == 53 && v == 52)\par
        return 52;\par
    else if ( u == 52 && v == 51)\par
        return 51;\par
    else if ( u == 55 && v == 51)\par
        return 51;\par
    else if ( u == 51 && v == 26)\par
        return 26;\par
    else if ( u == 25 && v == 26)\par
        return 26;\par
    else if ( u == 27 && v == 28)\par
        return 28;\par
    else if ( u == 26 && v == 28)\par
        return 28;\par
    else if ( u == 21 && v == 29)\par
        return 29;\par
    else if ( u == 28 && v == 29)\par
        return 29;\par
    else if ( u == 0 && v == 2)\par
        return 2;\par
    else if ( u == 71 && v == 2)\par
        return 2;\par
    else if ( u == 1 && v == 0)\par
        return 0;\par
    else if ( u == 2 && v == 0)\par
        return 0;\par
    else if ( u == 47 && v == 49)\par
        return 49;\par
    else if ( u == 48 && v == 49)\par
        return 49;\par
    else if ( u == 30 && v == 31)\par
        return 31;\par
    else if ( u == 70 && v == 31)\par
        return 31;\par
    else if ( u == 66 && v == 65)\par
        return 65;\par
    else if ( u == 67 && v == 65)\par
        return 65;\par
    else if ( u == 37 && v == 39)\par
        return 39;\par
    else if ( u == 38 && v == 39)\par
        return 39;\par
    else if ( u == 68 && v == 36)\par
        return 36;\par
    else if ( u == 35 && v == 36)\par
        return 36;\par
    else if ( u == 33 && v == 32)\par
        return 32;\par
    else if ( u == 34 && v == 32)\par
        return 32;\par
    else if ( u == 32 && v == 34)\par
        return 34;\par
    else if ( u == 50 && v == 34)\par
        return 34;\par
\par
    else\par
        return -1;\par
\}\par
\par
int forbiddenTurnV(int u, int v)\par
\{\par
    if ( u == 43 && v == 42)\par
        return 44;\par
    else if ( u == 44 && v == 42)\par
        return 43;\par
    else if ( u == 42 && v == 41)\par
        return 46;\par
    else if ( u == 46 && v == 41)\par
        return 42;\par
    else if ( u == 41 && v == 40)\par
        return 45;\par
    else if ( u == 45 && v == 40)\par
        return 41;\par
    else if ( u == 15 && v == 14)\par
        return 16;\par
    else if ( u == 16 && v == 14)\par
        return 15;\par
    else if ( u == 8 && v == 7)\par
        return 9;\par
    else if ( u == 9 && v == 7)\par
        return 8;\par
    else if ( u == 5 && v == 4)\par
        return 6;\par
    else if ( u == 6 && v == 4)\par
        return 5;\par
    else if ( u == 11 && v == 10)\par
        return 12;\par
    else if ( u == 12 && v == 10)\par
        return 11;\par
    else if ( u == 14 && v == 16)\par
        return 12;\par
    else if ( u == 12 && v == 16)\par
        return 14;\par
    else if ( u == 63 && v == 62)\par
        return 64;\par
    else if ( u == 64 && v == 62)\par
        return 63;\par
    else if ( u == 18 && v == 17)\par
        return 19;\par
    else if ( u == 19 && v == 17)\par
        return 18;\par
    else if ( u == 3 && v == 5)\par
        return 4;\par
    else if ( u == 4 && v == 5)\par
        return 3;\par
    else if ( u == 21 && v == 20)\par
        return 22;\par
    else if ( u == 22 && v == 20)\par
        return 21;\par
    else if ( u == 23 && v == 22)\par
        return 24;\par
    else if ( u == 24 && v == 22)\par
        return 23;\par
    else if ( u == 54 && v == 52)\par
        return 53;\par
    else if ( u == 53 && v == 52)\par
        return 54;\par
    else if ( u == 52 && v == 51)\par
        return 55;\par
    else if ( u == 55 && v == 51)\par
        return 52;\par
    else if ( u == 51 && v == 26)\par
        return 25;\par
    else if ( u == 25 && v == 26)\par
        return 51;\par
    else if ( u == 27 && v == 28)\par
        return 26;\par
    else if ( u == 26 && v == 28)\par
        return 27;\par
    else if ( u == 21 && v == 29)\par
        return 28;\par
    else if ( u == 28 && v == 29)\par
        return 21;\par
    else if ( u == 0 && v == 2)\par
        return 71;\par
    else if ( u == 71 && v == 2)\par
        return 0;\par
    else if ( u == 1 && v == 0)\par
        return 2;\par
    else if ( u == 2 && v == 0)\par
        return 1;\par
    else if ( u == 47 && v == 49)\par
        return 48;\par
    else if ( u == 48 && v == 49)\par
        return 47;\par
    else if ( u == 30 && v == 31)\par
        return 70;\par
    else if ( u == 70 && v == 31)\par
        return 30;\par
    else if ( u == 66 && v == 65)\par
        return 67;\par
    else if ( u == 67 && v == 65)\par
        return 66;\par
    else if ( u == 37 && v == 39)\par
        return 38;\par
    else if ( u == 38 && v == 39)\par
        return 37;\par
    else if ( u == 68 && v == 36)\par
        return 35;\par
    else if ( u == 35 && v == 36)\par
        return 68;\par
    else if ( u == 33 && v == 32)\par
        return 34;\par
    else if ( u == 34 && v == 32)\par
        return 33;\par
    else if ( u == 32 && v == 34)\par
        return 50;\par
    else if ( u == 50 && v == 34)\par
        return 32;\par
\par
    else\par
        return -1;\par
\}\par
\par
long dijcheckSwitches(long dcN, long dnN)\par
\{\par
    int switchUsed = -1;\par
    if (dcN == 36)\par
    \{\par
        if(dnN == 35)\par
            switchUsed = 11;\par
        else if(dnN == 68)\par
           switchUsed = 11;\par
\par
\par
           return switchUsed;\par
    \}\par
    else if (dcN == 39)\par
    \{\par
        if(dnN == 38)\par
            switchUsed = 21;\par
        else if(dnN == 37)\par
           switchUsed = 21;\par
\par
           return switchUsed;\par
    \}\par
\par
    else if (dcN == 65)\par
    \{\par
        if(dnN == 66)\par
            switchUsed = 43;\par
        else if(dnN == 67)\par
           switchUsed = 43;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 31)\par
    \{\par
        if(dnN == 70)\par
            switchUsed = 42;\par
        else if(dnN == 30)\par
           switchUsed = 42;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 32)\par
    \{\par
        if(dnN == 33)\par
            switchUsed = 13;\par
        else if(dnN == 34)\par
           switchUsed = 13;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 34)\par
    \{\par
        if(dnN == 50)\par
            switchUsed = 12;\par
        else if(dnN == 32)\par
            switchUsed = 12;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 0)\par
    \{\par
        if(dnN == 1)\par
            switchUsed = 22;\par
        else if(dnN == 2)\par
            switchUsed = 22;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 2)\par
    \{\par
        if(dnN == 71)\par
            switchUsed = 23;\par
        else if(dnN == 0)\par
            switchUsed = 23;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 29)\par
    \{\par
        if(dnN == 21)\par
            switchUsed = 24;\par
        else if(dnN == 28)\par
            switchUsed = 24;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 28)\par
    \{\par
        if(dnN == 26)\par
            switchUsed = 34;\par
        else if(dnN == 27)\par
           switchUsed = 34;\par
        else if(dnN == 29)\par
           switchUsed = 24;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 26)\par
    \{\par
        if(dnN == 51)\par
            switchUsed = 33;\par
        else if(dnN == 25)\par
           switchUsed = 33;\par
        else if(dnN == 28)\par
            switchUsed = 34;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 51)\par
    \{\par
        if(dnN == 52)\par
           switchUsed = 32;\par
        else if(dnN == 55)\par
           switchUsed = 32;\par
        else if(dnN == 26)\par
            switchUsed = 33;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 52)\par
    \{\par
        if(dnN == 53)\par
            switchUsed = 31;\par
        else if(dnN == 54)\par
           switchUsed = 31;\par
        else if(dnN == 51)\par
            switchUsed = 32;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 49)\par
    \{\par
        if(dnN == 47)\par
            switchUsed = 41;\par
        else if(dnN == 48)\par
           switchUsed = 41;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 56)\par
    \{\par
        if(dnN == 57)\par
           switchUsed = 14;\par
        else if(dnN == 58)\par
           switchUsed = 14;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 42)\par
    \{\par
        if(dnN == 43)\par
            switchUsed = 63;\par
        else if(dnN == 44)\par
           switchUsed = 63;\par
        else if(dnN == 41)\par
           switchUsed = 62;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 41)\par
    \{\par
        if(dnN == 42)\par
            switchUsed = 62;\par
        else if(dnN == 46)\par
           switchUsed = 62;\par
        else if(dnN == 40)\par
            switchUsed = 61;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 40)\par
    \{\par
        if(dnN == 41)\par
            switchUsed = 61;\par
        else if(dnN == 45)\par
           switchUsed = 61;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 61)\par
    \{\par
        if(dnN == 59)\par
            switchUsed = 84;\par
        else if(dnN == 60)\par
           switchUsed = 84;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 22)\par
    \{\par
        if(dnN == 24)\par
            switchUsed = 64;\par
        else if(dnN == 23)\par
           switchUsed = 64;\par
        else if(dnN == 20)\par
            switchUsed = 75;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 20)\par
    \{\par
        if(dnN == 21)\par
            switchUsed = 74;\par
        else if(dnN == 22)\par
           switchUsed = 74;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 4)\par
    \{\par
        if(dnN == 6)\par
            switchUsed = 73;\par
        else if(dnN == 5)\par
           switchUsed = 73;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 5)\par
    \{\par
        if(dnN == 3)\par
            switchUsed = 72;\par
        else if(dnN == 4)\par
           switchUsed = 72;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 7)\par
    \{\par
        if(dnN == 9)\par
            switchUsed = 71;\par
        else if(dnN == 8)\par
           switchUsed = 71;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 62)\par
    \{\par
        if(dnN == 63)\par
            switchUsed = 52;\par
        else if(dnN == 64)\par
           switchUsed = 52;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 17)\par
    \{\par
        if(dnN == 19)\par
            switchUsed = 51;\par
        else if(dnN == 18)\par
           switchUsed = 51;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 16)\par
    \{\par
        if(dnN == 12)\par
            switchUsed = 83;\par
        else if(dnN == 14)\par
           switchUsed = 83;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 14)\par
    \{\par
        if(dnN == 15)\par
            switchUsed = 82;\par
\par
        else if(dnN == 16)\par
           switchUsed = 82;\par
           return switchUsed;\par
    \}\par
    else if (dcN == 10)\par
    \{\par
        if(dnN == 12)\par
            switchUsed = 81;\par
        else if(dnN == 11)\par
            switchUsed = 81;\par
            return switchUsed;\par
    \}\par
    else if (dcN == 35 && dnN == 36)\par
        switchUsed = 11;\par
    else if (dcN == 38 && dnN == 39)\par
        switchUsed = 21;\par
    else if (dcN == 66 && dnN == 65)\par
        switchUsed = 43;\par
    else if (dcN == 70 && dnN == 31)\par
        switchUsed = 42;\par
    else if (dcN == 33 && dnN == 32)\par
        switchUsed = 13;\par
    else if (dcN == 50 && dnN == 34)\par
        switchUsed = 12;\par
    else if (dcN == 1 && dnN == 0)\par
        switchUsed = 22;\par
    else if (dcN == 71 && dnN == 2)\par
        switchUsed = 23;\par
    else if (dcN == 53 && dnN == 52)\par
        switchUsed = 31;\par
    else if (dcN == 47 && dnN == 49)\par
        switchUsed = 41;\par
    else if (dcN == 57 && dnN == 56)\par
        switchUsed = 14;\par
    else if (dcN == 43 && dnN == 42)\par
        switchUsed = 63;\par
    else if (dcN == 59 && dnN == 61)\par
        switchUsed = 84;\par
    else if (dcN == 24 && dnN == 22)\par
        switchUsed = 64;\par
    else if (dcN == 6 && dnN == 4)\par
        switchUsed = 73;\par
    else if (dcN == 3 && dnN == 5)\par
        switchUsed = 72;\par
    else if (dcN == 9 && dnN == 7)\par
        switchUsed = 71;\par
    else if (dcN == 63 && dnN == 62)\par
        switchUsed = 52;\par
    else if (dcN == 19 && dnN == 17)\par
        switchUsed = 51;\par
    else if (dcN == 15 && dnN == 14)\par
        switchUsed = 82;\par
\par
\par
    else if(dcN == 21)\par
    \{\par
        if (dnN == 20)\par
            switchUsed = 74;\par
        else if (dnN == 29)\par
            switchUsed = 24;\par
\par
        return switchUsed;\par
    \}\par
    else if(dcN == 12)\par
    \{\par
        if (dnN == 16)\par
            switchUsed = 83;\par
        else if (dnN == 10)\par
            switchUsed = 81;\par
\par
        return switchUsed;\par
    \}\par
    else if (dcN == 68 && dnN == 36)\par
        switchUsed = 11;\par
    else if (dcN == 37 && dnN == 39)\par
        switchUsed = 21;\par
    else if (dcN == 67 && dnN == 65)\par
        switchUsed = 43;\par
    else if (dcN == 30 && dnN == 31)\par
        switchUsed = 42;\par
    else if (dcN == 27 && dnN == 28)\par
        switchUsed = 34;\par
    else if (dcN == 25 && dnN == 26)\par
        switchUsed = 33;\par
    else if (dcN == 55 && dnN == 51)\par
        switchUsed = 32;\par
    else if (dcN == 54 && dnN == 52)\par
        switchUsed = 31;\par
    else if (dcN == 48 && dnN == 49)\par
        switchUsed = 41;\par
    else if (dcN == 58 && dnN == 56)\par
        switchUsed = 14;\par
    else if (dcN == 44 && dnN == 42)\par
        switchUsed = 63;\par
\par
    else if (dcN == 46 && dnN == 41)\par
        switchUsed = 62;\par
    else if (dcN == 45 && dnN == 40)\par
        switchUsed = 61;\par
    else if (dcN == 60 && dnN == 61)\par
        switchUsed = 84;\par
    else if (dcN == 23 && dnN == 22)\par
        switchUsed = 64;\par
    else if (dcN == 8 && dnN == 7)\par
        switchUsed = 71;\par
    else if (dcN == 64 && dnN == 62)\par
        switchUsed = 52;\par
    else if (dcN == 18 && dnN == 17)\par
        switchUsed = 51;\par
    else if (dcN == 11 && dnN == 10)\par
        switchUsed = 81;\par
    else\par
        switchUsed = -1;\par
\par
        return switchUsed;\par
\}\par
\par
#endif // DIJKSTRA_H\par
}
 